@model E_Comm.Models.Product
@{
    ViewData["Title"] = "Edit Item - Admin";
    Layout = "_AdminLayout";
}

<div class="edit-item">
    <!-- Page Header -->
    <div class="page-header">
        <div class="header-content">
            <div class="header-title">
                <h1 class="page-title">
                    <i class="fas fa-edit me-3"></i>Edit Item
                </h1>
                <p class="page-subtitle">Modify product details and manage stock</p>
            </div>
            <div class="header-actions">
                <a href="@Url.Action("ManageItems", "Admin")" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Back to Items
                </a>
            </div>
        </div>
    </div>

    <!-- Form Section -->
    <div class="form-section">
        <div class="row">
            <div class="col-lg-8">
                <!-- Main Form Card -->
                <div class="form-card">
                    <div class="card-header">
                        <h4 class="card-title">
                            <i class="fas fa-info-circle me-2"></i>Product Information
                        </h4>
                    </div>
                    <div class="card-body">
                        <form asp-controller="Admin" asp-action="EditItem" method="post" id="editItemForm">
                            @Html.AntiForgeryToken()
                            <input asp-for="ID" type="hidden" />
                            <input asp-for="LastUpdatedBy" type="hidden" />
                            <input asp-for="LastUpdated" type="hidden" />
                            
                            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                            <div class="form-group">
                                <label asp-for="Name" class="form-label required">Product Name</label>
                                <input asp-for="Name" class="form-control" placeholder="Enter product name" required />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="Author" class="form-label">Author/Creator</label>
                                <input asp-for="Author" class="form-control" placeholder="Enter author or creator name" />
                                <span asp-validation-for="Author" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="GenreID" class="form-label required">Genre</label>
                                <select asp-for="GenreID" class="form-select" required>
                                    <option value="">Select a genre</option>
                                    @if (ViewBag.Genres != null)
                                    {
                                        @foreach (var genre in (List<E_Comm.Models.Genre>)ViewBag.Genres)
                                        {
                                            <option value="@genre.GenreID">@genre.Name</option>
                                        }
                                    }
                                </select>
                                <span asp-validation-for="GenreID" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="Description" class="form-label">Description</label>
                                <textarea asp-for="Description" class="form-control" rows="4" 
                                          placeholder="Enter product description"></textarea>
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="Published" class="form-label">Publication Date</label>
                                <input asp-for="Published" type="date" class="form-control" />
                                <span asp-validation-for="Published" class="text-danger"></span>
                            </div>

                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save me-2"></i>Update Item
                                </button>
                                <a href="@Url.Action("ManageItems", "Admin")" class="btn btn-outline-secondary">
                                    <i class="fas fa-times me-2"></i>Cancel
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <!-- Stock Management Card -->
                <div class="stock-management-card">
                    <div class="card-header">
                        <h4 class="card-title">
                            <i class="fas fa-warehouse me-2"></i>Stock Management
                        </h4>
                    </div>
                    <div class="card-body">
                        @if (Model.Stocktakes?.Any() == true)
                        {
                            <div class="current-stock">
                                <h5 class="stock-section-title">Current Stock</h5>
                                @foreach (var stocktake in Model.Stocktakes)
                                {
                                    <div class="stock-item">
                                        <div class="stock-header">
                                            <div class="source-info">
                                                <strong>@(stocktake.Source?.Source_name ?? "Unknown Source")</strong>
                                            </div>
                                            <div class="stock-actions">
                                                <button type="button" class="btn btn-sm btn-outline-primary" 
                                                        onclick="editStock(@stocktake.ItemId, @stocktake.Quantity, @stocktake.Price)">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <div class="stock-details">
                                            <div class="stock-quantity">
                                                <span class="label">Quantity:</span>
                                                <span class="value">@stocktake.Quantity</span>
                                            </div>
                                            <div class="stock-price">
                                                <span class="label">Price:</span>
                                                <span class="value">$@String.Format("{0:F2}", stocktake.Price ?? 0)</span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="no-stock">
                                <i class="fas fa-exclamation-triangle text-warning"></i>
                                <p>No stock entries found for this item.</p>
                            </div>
                        }

                        <!-- Add New Stock Entry -->
                        <div class="add-stock-section">
                            <h5 class="stock-section-title">Add New Stock Entry</h5>
                            <form id="addStockForm">
                                <div class="form-group">
                                    <label class="form-label">Source</label>
                                    <select id="newStockSource" class="form-select">
                                        <option value="">Select a source</option>
                                        @if (ViewBag.Sources != null)
                                        {
                                            @foreach (var source in (List<E_Comm.Models.Source>)ViewBag.Sources)
                                            {
                                                <option value="@source.SourceId">@source.Source_name</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Quantity</label>
                                    <input type="number" id="newStockQuantity" class="form-control" min="0" value="0" />
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Price</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input type="number" id="newStockPrice" class="form-control" min="0" step="0.01" value="0.00" />
                                    </div>
                                </div>
                                <button type="button" class="btn btn-success btn-sm" onclick="addStock()">
                                    <i class="fas fa-plus me-2"></i>Add Stock
                                </button>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- Item Statistics Card -->
                <div class="statistics-card">
                    <div class="card-header">
                        <h4 class="card-title">
                            <i class="fas fa-chart-bar me-2"></i>Item Statistics
                        </h4>
                    </div>
                    <div class="card-body">
                        <div class="stat-item">
                            <div class="stat-icon">
                                <i class="fas fa-boxes"></i>
                            </div>
                            <div class="stat-info">
                                <div class="stat-value">@(Model.Stocktakes?.Sum(s => s.Quantity) ?? 0)</div>
                                <div class="stat-label">Total Stock</div>
                            </div>
                        </div>

                        <div class="stat-item">
                            <div class="stat-icon">
                                <i class="fas fa-dollar-sign"></i>
                            </div>
                            <div class="stat-info">
                                @{
                                    var avgPrice = Model.Stocktakes?.Average(s => s.Price) ?? 0;
                                }
                                <div class="stat-value">$@String.Format("{0:F2}", avgPrice)</div>
                                <div class="stat-label">Average Price</div>
                            </div>
                        </div>

                        <div class="stat-item">
                            <div class="stat-icon">
                                <i class="fas fa-store"></i>
                            </div>
                            <div class="stat-info">
                                <div class="stat-value">@(Model.Stocktakes?.Count ?? 0)</div>
                                <div class="stat-label">Sources</div>
                            </div>
                        </div>

                        <div class="stat-item">
                            <div class="stat-icon">
                                <i class="fas fa-calendar"></i>
                            </div>
                            <div class="stat-info">
                                <div class="stat-value">@(Model.LastUpdated?.ToString("MMM dd") ?? "Never")</div>
                                <div class="stat-label">Last Updated</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Stock Modal -->
<div class="modal fade" id="editStockModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Stock Entry</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editStockForm">
                    <input type="hidden" id="editStockId" />
                    <div class="form-group">
                        <label class="form-label">Quantity</label>
                        <input type="number" id="editStockQuantity" class="form-control" min="0" />
                    </div>
                    <div class="form-group">
                        <label class="form-label">Price</label>
                        <div class="input-group">
                            <span class="input-group-text">$</span>
                            <input type="number" id="editStockPrice" class="form-control" min="0" step="0.01" />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="updateStock()">Update Stock</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Edit Item Styles */
        .edit-item {
            max-width: 1400px;
            margin: 0 auto;
        }

        /* Page Header */
        .page-header {
            margin-bottom: 2rem;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .page-title {
            font-size: 2.5rem;
            font-weight: 800;
            color: var(--foreground);
            margin: 0;
            display: flex;
            align-items: center;
        }

        .page-title i {
            color: var(--primary);
        }

        .page-subtitle {
            color: var(--muted-foreground);
            margin: 0.5rem 0 0 0;
        }

        /* Form Section */
        .form-section {
            margin-bottom: 2rem;
        }

        .form-card,
        .stock-management-card,
        .statistics-card {
            background: var(--card);
            border: 1px solid var(--border);
            border-radius: var(--border-radius);
            margin-bottom: 2rem;
            overflow: hidden;
        }

        .card-header {
            padding: 1.5rem;
            background: var(--secondary);
            border-bottom: 1px solid var(--border);
        }

        .card-title {
            color: var(--foreground);
            font-weight: 600;
            margin: 0;
            display: flex;
            align-items: center;
        }

        .card-title i {
            color: var(--primary);
        }

        .card-body {
            padding: 2rem;
        }

        /* Form Styles */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            color: var(--foreground);
            font-weight: 600;
            margin-bottom: 0.5rem;
            display: block;
        }

        .form-label.required::after {
            content: ' *';
            color: var(--destructive);
        }

        .form-control,
        .form-select {
            padding: 0.875rem 1rem;
            border: 1px solid var(--border);
            border-radius: var(--border-radius-sm);
            background: var(--input);
            color: var(--foreground);
            transition: var(--transition-fast);
        }

        .form-control:focus,
        .form-select:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 0.2rem rgba(255, 255, 255, 0.25);
            background: var(--input);
            color: var(--foreground);
        }

        .form-control::placeholder {
            color: var(--muted-foreground);
        }

        .input-group-text {
            background: var(--secondary);
            border: 1px solid var(--border);
            color: var(--foreground);
        }

        .text-danger {
            color: var(--destructive);
            font-size: 0.875rem;
        }

        /* Form Actions */
        .form-actions {
            display: flex;
            gap: 1rem;
            padding-top: 1rem;
            border-top: 1px solid var(--border);
        }

        /* Stock Management */
        .stock-section-title {
            color: var(--foreground);
            font-weight: 600;
            margin-bottom: 1rem;
            font-size: 1.1rem;
        }

        .current-stock {
            margin-bottom: 2rem;
        }

        .stock-item {
            background: var(--muted);
            border: 1px solid var(--border);
            border-radius: var(--border-radius-sm);
            padding: 1rem;
            margin-bottom: 1rem;
        }

        .stock-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.75rem;
        }

        .source-info {
            color: var(--foreground);
        }

        .stock-details {
            display: flex;
            gap: 2rem;
        }

        .stock-quantity,
        .stock-price {
            display: flex;
            flex-direction: column;
            gap: 0.25rem;
        }

        .stock-quantity .label,
        .stock-price .label {
            color: var(--muted-foreground);
            font-size: 0.875rem;
        }

        .stock-quantity .value,
        .stock-price .value {
            color: var(--foreground);
            font-weight: 600;
        }

        .no-stock {
            text-align: center;
            padding: 2rem;
            color: var(--muted-foreground);
        }

        .no-stock i {
            font-size: 2rem;
            margin-bottom: 1rem;
        }

        .add-stock-section {
            border-top: 1px solid var(--border);
            padding-top: 2rem;
        }

        /* Statistics */
        .stat-item {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .stat-icon {
            width: 50px;
            height: 50px;
            background: var(--muted);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--primary);
            font-size: 1.25rem;
        }

        .stat-info {
            flex: 1;
        }

        .stat-value {
            color: var(--foreground);
            font-weight: 700;
            font-size: 1.25rem;
        }

        .stat-label {
            color: var(--muted-foreground);
            font-size: 0.875rem;
        }

        /* Modal Styles */
        .modal-content {
            background: var(--card);
            border: 1px solid var(--border);
        }

        .modal-header {
            border-bottom: 1px solid var(--border);
        }

        .modal-footer {
            border-top: 1px solid var(--border);
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .page-title {
                font-size: 2rem;
            }

            .header-content {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .card-body {
                padding: 1.5rem;
            }

            .form-actions {
                flex-direction: column;
            }

            .stock-details {
                flex-direction: column;
                gap: 1rem;
            }
        }
    </style>
}

@section Scripts {
    <script>
        // Edit stock functionality
        function editStock(stockId, quantity, price) {
            document.getElementById('editStockId').value = stockId;
            document.getElementById('editStockQuantity').value = quantity;
            document.getElementById('editStockPrice').value = price;
            
            const modal = new bootstrap.Modal(document.getElementById('editStockModal'));
            modal.show();
        }

        // Update stock functionality
        function updateStock() {
            const stockId = document.getElementById('editStockId').value;
            const quantity = parseInt(document.getElementById('editStockQuantity').value);
            const price = parseFloat(document.getElementById('editStockPrice').value);
            
            if (!stockId || isNaN(quantity) || isNaN(price) || quantity < 0 || price < 0) {
                alert('Please enter valid quantity and price values');
                return;
            }
            
            // Make AJAX call to update stock
            fetch('@Url.Action("UpdateStock", "Admin")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: `stockId=${stockId}&quantity=${quantity}&price=${price}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Close modal and refresh page
                    const modal = bootstrap.Modal.getInstance(document.getElementById('editStockModal'));
                    modal.hide();
                    
                    // Show success message
                    alert(data.message);
                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while updating stock');
            });
        }

        // Add stock functionality
        function addStock() {
            const sourceId = parseInt(document.getElementById('newStockSource').value);
            const quantity = parseInt(document.getElementById('newStockQuantity').value);
            const price = parseFloat(document.getElementById('newStockPrice').value);
            const productId = @Model.ID;
            
            if (!sourceId || isNaN(quantity) || isNaN(price) || quantity < 0 || price < 0) {
                alert('Please fill in all fields with valid values');
                return;
            }
            
            // Make AJAX call to add stock
            fetch('@Url.Action("AddStock", "Admin")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: `productId=${productId}&sourceId=${sourceId}&quantity=${quantity}&price=${price}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Show success message and reset form
                    alert(data.message);
                    document.getElementById('addStockForm').reset();
                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while adding stock');
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            // Auto-focus first input
            const firstInput = document.querySelector('input[name="Name"]');
            if (firstInput) {
                firstInput.focus();
            }

            // Add loading animation
            const cards = document.querySelectorAll('.form-card, .stock-management-card, .statistics-card');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
                
                setTimeout(() => {
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 200);
            });
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
} 