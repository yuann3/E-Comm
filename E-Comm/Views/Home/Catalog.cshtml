@model List<E_Comm.Models.Product>
@{
    ViewData["Title"] = "Product Catalog - 3B1G";
}

<!-- Full Screen Video Background for Product Catalog -->
<div class="hero-section-video-fullscreen text-white py-5 mb-5">
    <!-- Video Background -->
    <div class="video-background-fullscreen">
        <iframe src="https://www.youtube.com/embed/eT_A2gPhTIw?autoplay=1&mute=1&loop=1&playlist=eT_A2gPhTIw&controls=0&showinfo=0&rel=0&modestbranding=1&iv_load_policy=3&fs=0&disablekb=1&start=186&end=390"
                frameborder="0" 
                allow="autoplay; encrypted-media" 
                allowfullscreen
                title="Product catalog background video">
        </iframe>
        <div class="video-overlay-fullscreen"></div>
        <div class="video-fade-bottom"></div>
    </div>
    
    <!-- Content -->
    <div class="container position-relative">
        <div class="row align-items-center min-vh-50">
            <div class="col-lg-8">
                <div class="hero-content">
                    <h1 class="display-3 fw-bold mb-4 brand-font" style="color: white; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);">
                        Product Catalog
                    </h1>
                    <p class="lead mb-4 fs-4" style="color: white; text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.8);">
                        Discover our amazing collection of books, movies, and games
                    </p>
                    <div class="d-flex gap-3 flex-wrap mb-4">
                        <a href="#products" class="btn btn-light btn-lg px-4 py-3 fw-bold">
                            <i class="fas fa-search me-2"></i>Start Browsing
                        </a>
                        <a href="#search" class="btn btn-outline-light btn-lg px-4 py-3 fw-bold">
                            <i class="fas fa-filter me-2"></i>Find Specific Items
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <!-- Search and Filter Section -->
    <div class="row mb-5" id="search">
        <div class="col-12">
            <div class="search-section p-4">
                <form method="get" asp-action="Catalog">
                    <div class="row g-3 align-items-end">
                        <div class="col-lg-5 col-md-6">
                            <label for="searchTerm" class="form-label fw-semibold">
                                <i class="fas fa-search me-2"></i>Search Products
                            </label>
                            <input type="text" class="form-control form-control-lg" id="searchTerm" name="searchTerm" 
                                   value="@ViewBag.SearchTerm" placeholder="Search by title, author, or description...">
                        </div>
                        <div class="col-lg-3 col-md-4">
                            <label for="genreId" class="form-label fw-semibold">
                                <i class="fas fa-filter me-2"></i>Filter by Genre
                            </label>
                            <select class="form-select form-select-lg" id="genreId" name="genreId">
                                <option value="">All Genres</option>
                                @if (ViewBag.Genres != null)
                                {
                                    @foreach (var genre in (List<E_Comm.Models.Genre>)ViewBag.Genres)
                                    {
                                        <option value="@genre.GenreID" selected="@(ViewBag.SelectedGenre == genre.GenreID)">
                                            @genre.Name
                                        </option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-lg-2 col-md-6">
                            <button type="submit" class="btn btn-primary btn-lg w-100 fw-bold">
                                <i class="fas fa-search me-2"></i>Search
                            </button>
                        </div>
                        <div class="col-lg-2 col-md-6">
                            <a asp-action="Catalog" class="btn btn-outline-secondary btn-lg w-100 fw-bold">
                                <i class="fas fa-undo me-2"></i>Clear
                            </a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Results Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h3 class="fw-bold mb-2">
                        @if (!string.IsNullOrEmpty((string)ViewBag.SearchTerm))
                        {
                            <span>Search Results</span>
                        }
                        else if (ViewBag.SelectedGenre != null)
                        {
                            <span>Filtered Products</span>
                        }
                        else
                        {
                            <span>All Products</span>
                        }
                    </h3>
                    @if (!string.IsNullOrEmpty((string)ViewBag.SearchTerm))
                    {
                        <p class="text-muted mb-0">Results for "<em>@ViewBag.SearchTerm</em>"</p>
                    }
                </div>
                <div>
                    <span class="badge bg-primary fs-6 px-3 py-2">
                        <i class="fas fa-box me-2"></i>@Model.Count items found
                    </span>
                </div>
            </div>
        </div>
    </div>

    <!-- Products Grid -->
    @if (Model.Any())
    {
        <div class="row g-4 mb-5" id="products">
            @foreach (var product in Model)
            {
                <div class="col-xl-3 col-lg-4 col-md-6">
                    <div class="product-card h-100">
                        <div class="card-body d-flex flex-column">
                            <!-- Product Header -->
                            <div class="d-flex justify-content-between align-items-start mb-3">
                                @if (product.Genre != null)
                                {
                                    <span class="badge bg-primary">@product.Genre.Name</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Entertainment</span>
                                }
                                
                                @if (product.Stocktakes?.Any() == true)
                                {
                                    var stocktake = product.Stocktakes.First();
                                    <div class="text-end">
                                        <div class="price-display">$@(stocktake.Price?.ToString("F2") ?? "0.00")</div>
                                        @if (stocktake.Quantity <= 5)
                                        {
                                            <small class="stock-status stock-low">
                                                <i class="fas fa-exclamation-triangle me-1"></i>Only @stocktake.Quantity left!
                                            </small>
                                        }
                                        else if (stocktake.Quantity == 0)
                                        {
                                            <small class="stock-status stock-out">
                                                <i class="fas fa-times-circle me-1"></i>Out of Stock
                                            </small>
                                        }
                                        else
                                        {
                                            <small class="stock-status stock-available">
                                                <i class="fas fa-check-circle me-1"></i>In Stock
                                            </small>
                                        }
                                    </div>
                                }
                            </div>

                            <!-- Product Info -->
                            <h5 class="card-title fw-bold mb-2">@product.Name</h5>
                            
                            @if (!string.IsNullOrEmpty(product.Author))
                            {
                                <p class="text-muted small mb-2">
                                    <i class="fas fa-user me-2"></i>by @product.Author
                                </p>
                            }
                            
                            @if (product.Published.HasValue)
                            {
                                <p class="text-muted small mb-2">
                                    <i class="fas fa-calendar me-2"></i>@product.Published.Value.ToString("yyyy")
                                </p>
                            }

                            @if (!string.IsNullOrEmpty(product.Description))
                            {
                                <p class="card-text text-muted small mb-3 flex-grow-1">
                                    @(product.Description.Length > 80 ? product.Description.Substring(0, 80) + "..." : product.Description)
                                </p>
                            }

                            <!-- Action Buttons -->
                            <div class="mt-auto">
                                <div class="d-grid gap-2">
                                    <a asp-controller="Home" asp-action="ProductDetails" asp-route-id="@product.ID" 
                                       class="btn btn-outline-primary">
                                        <i class="fas fa-eye me-2"></i>View Details
                                    </a>
                                    @if (User.Identity?.IsAuthenticated == true && User.IsInRole("Customer"))
                                    {
                                        @if (product.Stocktakes?.Any() == true && product.Stocktakes.First().Quantity > 0)
                                        {
                                            <button type="button" class="btn btn-success" onclick="addToCart(@product.ID)">
                                                <i class="fas fa-shopping-cart me-2"></i>Add to Cart
                                            </button>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-secondary" disabled>
                                                <i class="fas fa-times me-2"></i>Out of Stock
                                            </button>
                                        }
                                    }
                                    else if (User.Identity?.IsAuthenticated != true)
                                    {
                                        <a asp-controller="Auth" asp-action="Login" class="btn btn-outline-success">
                                            <i class="fas fa-sign-in-alt me-2"></i>Login to Purchase
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (ViewBag.TotalPages > 1)
        {
            <div class="row mt-5">
                <div class="col-12">
                    <nav aria-label="Product pagination" class="d-flex justify-content-center">
                        <ul class="pagination pagination-lg">
                            @if (ViewBag.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Catalog" 
                                       asp-route-searchTerm="@ViewBag.SearchTerm" 
                                       asp-route-genreId="@ViewBag.SelectedGenre"
                                       asp-route-page="@(ViewBag.CurrentPage - 1)">
                                        <i class="fas fa-chevron-left me-1"></i>Previous
                                    </a>
                                </li>
                            }

                            @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                            {
                                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-action="Catalog" 
                                       asp-route-searchTerm="@ViewBag.SearchTerm" 
                                       asp-route-genreId="@ViewBag.SelectedGenre"
                                       asp-route-page="@i">@i</a>
                                </li>
                            }

                            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Catalog" 
                                       asp-route-searchTerm="@ViewBag.SearchTerm" 
                                       asp-route-genreId="@ViewBag.SelectedGenre"
                                       asp-route-page="@(ViewBag.CurrentPage + 1)">
                                        Next<i class="fas fa-chevron-right ms-1"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                    
                    <!-- Pagination Info -->
                    <div class="text-center mt-3">
                        <small class="text-muted">
                            Showing page @ViewBag.CurrentPage of @ViewBag.TotalPages
                        </small>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <!-- No Products Found -->
        <div class="row">
            <div class="col-12">
                <div class="text-center py-5">
                    <div class="feature-icon mx-auto mb-4" style="width: 150px; height: 150px; background: var(--gray-100);">
                        <i class="fas fa-search fa-3x text-muted"></i>
                    </div>
                    <h3 class="fw-bold mb-3">No products found</h3>
                    <p class="text-muted mb-4 lead">Try adjusting your search terms or filters to find what you're looking for.</p>
                    <div class="d-flex gap-3 justify-content-center flex-wrap">
                        <a asp-action="Catalog" class="btn btn-primary btn-lg px-4">
                            <i class="fas fa-th-large me-2"></i>Browse All Products
                        </a>
                        @if (!string.IsNullOrEmpty((string)ViewBag.SearchTerm))
                        {
                            <a asp-action="Catalog" class="btn btn-outline-secondary btn-lg px-4">
                                <i class="fas fa-times me-2"></i>Clear Search
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function addToCart(productId) {
            // Show loading state
            const button = event.target.closest('button');
            const originalContent = button.innerHTML;
            button.innerHTML = '<span class="loading me-2"></span>Adding...';
            button.disabled = true;

            // Add to cart functionality with modern toast notification
            fetch('/Customer/AddToCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `productId=${productId}&quantity=1`
            })
            .then(response => {
                if (response.ok) {
                    // Show success message
                    showToast('success', 'Item added to cart successfully!', 'fas fa-check-circle');
                    
                    // Update button to show success temporarily
                    button.innerHTML = '<i class="fas fa-check me-2"></i>Added!';
                    button.classList.remove('btn-success');
                    button.classList.add('btn-outline-success');
                    
                    // Restore button after 2 seconds
                    setTimeout(() => {
                        button.innerHTML = originalContent;
                        button.classList.remove('btn-outline-success');
                        button.classList.add('btn-success');
                        button.disabled = false;
                    }, 2000);
                } else {
                    showToast('error', 'Failed to add item to cart. Please try again.', 'fas fa-exclamation-circle');
                    // Restore button
                    button.innerHTML = originalContent;
                    button.disabled = false;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('error', 'An error occurred. Please try again.', 'fas fa-exclamation-triangle');
                // Restore button
                button.innerHTML = originalContent;
                button.disabled = false;
            });
        }

        function showToast(type, message, icon) {
            const toastId = 'toast-' + Date.now();
            const bgColor = type === 'success' ? 'bg-success' : 'bg-danger';
            
            const toastHtml = `
                <div class="toast show ${bgColor} text-white" role="alert" id="${toastId}" style="min-width: 300px;">
                    <div class="toast-header ${bgColor} text-white border-0">
                        <i class="${icon} me-2"></i>
                        <strong class="me-auto">${type === 'success' ? 'Success' : 'Error'}</strong>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
                    </div>
                    <div class="toast-body">
                        ${message}
                    </div>
                </div>
            `;
            
            // Create toast container if it doesn't exist
            let container = document.getElementById('toast-container');
            if (!container) {
                container = document.createElement('div');
                container.id = 'toast-container';
                container.className = 'toast-container position-fixed top-0 end-0 p-3';
                container.style.zIndex = '1055';
                document.body.appendChild(container);
            }
            
            container.insertAdjacentHTML('beforeend', toastHtml);
            
            // Auto remove after 4 seconds
            setTimeout(() => {
                const toastElement = document.getElementById(toastId);
                if (toastElement) {
                    toastElement.remove();
                }
            }, 4000);
        }

        // Search form enhancements
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchTerm');
            const searchForm = searchInput.closest('form');
            
            // Add search on Enter key
            searchInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    searchForm.submit();
                }
            });
            
            // Add real-time search feedback (optional)
            searchInput.addEventListener('input', function() {
                if (this.value.length > 0) {
                    this.classList.add('border-primary');
                } else {
                    this.classList.remove('border-primary');
                }
            });
        });
    </script>
} 