@model E_Comm.Models.Product
@{
    ViewData["Title"] = $"{Model.Name} - Product Details - 3B1G";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <!-- Breadcrumb Navigation -->
            <nav aria-label="breadcrumb" class="mb-4">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "Home")">
                            <i class="fas fa-home me-1"></i>Home
                        </a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Catalog", "Home")">
                            <i class="fas fa-search me-1"></i>Catalog
                        </a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">
                        Product Details
                    </li>
                </ol>
            </nav> 

            <!-- Success Message -->
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    <strong>Success!</strong> @TempData["Success"]
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Main Product Details -->
            <div class="row g-4">
                <!-- Product Image & Icon -->
                <div class="col-lg-5">
                    <div class="product-showcase">
                        <div class="product-icon-large">
                            @{
                                var genreName = Model.Genre?.Name?.ToLower() ?? "";
                                string iconClass = "fas fa-book";
                                string iconColor = "text-info";
                                
                                if (genreName.Contains("movie") || genreName.Contains("film"))
                                {
                                    iconClass = "fas fa-film";
                                    iconColor = "text-danger";
                                }
                                else if (genreName.Contains("game") || genreName.Contains("gaming"))
                                {
                                    iconClass = "fas fa-gamepad";
                                    iconColor = "text-success";
                                }
                                else if (genreName.Contains("book") || genreName.Contains("literature"))
                                {
                                    iconClass = "fas fa-book";
                                    iconColor = "text-info";
                                }
                                else if (genreName.Contains("music") || genreName.Contains("audio"))
                                {
                                    iconClass = "fas fa-music";
                                    iconColor = "text-warning";
                                }
                            }
                            <div class="icon-showcase">
                                <i class="@iconClass @iconColor"></i>
                            </div>
                        </div>
                        
                        <!-- Quick Actions -->
                        <div class="quick-actions-grid mt-4">
                            <div class="action-item">
                                <i class="fas fa-star text-warning"></i>
                                <span>Premium Quality</span>
                            </div>
                            <div class="action-item">
                                <i class="fas fa-shield-alt text-success"></i>
                                <span>Authentic Product</span>
                            </div>
                            <div class="action-item">
                                <i class="fas fa-shipping-fast text-info"></i>
                                <span>Fast Delivery</span>
                            </div>
                            <div class="action-item">
                                <i class="fas fa-award text-primary"></i>
                                <span>Best Seller</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Product Information -->
                <div class="col-lg-7">
                    <div class="product-info">
                        <!-- Product Header -->
                        <div class="product-header mb-4">
                            <div class="genre-badge mb-2">
                                <i class="fas fa-tag me-2"></i>
                                @(Model.Genre?.Name ?? "Unknown Genre")
                            </div>
                            <h1 class="product-title">@Model.Name</h1>
                            <div class="product-author">
                                <i class="fas fa-user me-2"></i>
                                by <strong>@Model.Author</strong>
                            </div>
                        </div>

                        <!-- Product Description -->
                        <div class="product-description mb-4">
                            <h5 class="section-title">Description</h5>
                            <p class="text-muted">@Model.Description</p>
                        </div>

                        <!-- Pricing & Stock Section -->
                        <div class="pricing-section mb-4">
                            @if (Model.Stocktakes?.Any() == true)
                            {
                                var stocktake = Model.Stocktakes.First();
                                <div class="price-container">
                                    <div class="current-price">
                                        $@String.Format("{0:F2}", stocktake.Price ?? 0)
                                    </div>
                                    <div class="stock-info">
                                        @if (stocktake.Quantity > 0)
                                        {
                                            <span class="stock-available">
                                                <i class="fas fa-check-circle me-1"></i>
                                                @stocktake.Quantity in stock
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="stock-out">
                                                <i class="fas fa-times-circle me-1"></i>
                                                Out of stock
                                            </span>
                                        }
                                    </div>
                                </div>

                                <!-- Source Information -->
                                @if (stocktake.Source != null)
                                {
                                    <div class="source-info mt-3">
                                        <small class="text-muted">
                                            <i class="fas fa-store me-1"></i>
                                            Available from: <strong>@stocktake.Source.Source_name</strong>
                                        </small>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="price-container">
                                    <div class="current-price text-muted">Price unavailable</div>
                                    <div class="stock-info">
                                        <span class="stock-out">
                                            <i class="fas fa-times-circle me-1"></i>
                                            Currently unavailable
                                        </span>
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- Action Buttons -->
                        <div class="action-buttons">
                            @if (User.Identity?.IsAuthenticated == true && (User.IsInRole("Customer") || User.IsInRole("Admin")))
                            {
                                <!-- Customer or Admin is logged in -->
                                @if (Model.Stocktakes?.Any(s => s.Quantity > 0) == true)
                                {
                                    <div class="add-to-cart-form">
                                        <div class="quantity-section mb-3">
                                            <label for="quantity" class="form-label">Quantity:</label>
                                            <div class="quantity-controls">
                                                <button type="button" class="quantity-btn minus-btn">
                                                    <i class="fas fa-minus"></i>
                                                </button>
                                                <input type="number" id="quantity" name="quantity" value="1" min="1" max="@Model.Stocktakes.First().Quantity" class="quantity-input">
                                                <button type="button" class="quantity-btn plus-btn">
                                                    <i class="fas fa-plus"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <div class="button-group">
                                            <button type="button" class="btn btn-primary btn-add-cart" onclick="addToCartWithQuantity(@Model.ID)">
                                                <i class="fas fa-shopping-cart me-2"></i>Add to Cart
                                            </button>
                                            <button type="button" class="btn btn-outline-primary btn-wishlist">
                                                <i class="fas fa-heart me-2"></i>Add to Wishlist
                                            </button>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="button-group">
                                        <button type="button" class="btn btn-secondary" disabled>
                                            <i class="fas fa-times me-2"></i>Currently Unavailable
                                        </button>
                                        <button type="button" class="btn btn-outline-primary btn-notify">
                                            <i class="fas fa-bell me-2"></i>Notify When Available
                                        </button>
                                    </div>
                                }
                            }
                            else
                            {
                                <!-- User is not logged in or not a customer/admin -->
                                <div class="button-group">
                                    <a href="@Url.Action("Login", "Auth")" class="btn btn-primary">
                                        <i class="fas fa-sign-in-alt me-2"></i>Login to Purchase
                                    </a>
                                    <a href="@Url.Action("Signup", "Auth")" class="btn btn-outline-primary">
                                        <i class="fas fa-user-plus me-2"></i>Create Account
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Additional Information Tabs -->
            <div class="row mt-5">
                <div class="col-12">
                    <div class="info-tabs">
                        <ul class="nav nav-tabs" id="productTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" type="button" role="tab">
                                    <i class="fas fa-info-circle me-2"></i>Details
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="specifications-tab" data-bs-toggle="tab" data-bs-target="#specifications" type="button" role="tab">
                                    <i class="fas fa-list me-2"></i>Specifications
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button" role="tab">
                                    <i class="fas fa-star me-2"></i>Reviews
                                </button>
                            </li>
                        </ul>
                        <div class="tab-content" id="productTabsContent">
                            <div class="tab-pane fade show active" id="details" role="tabpanel">
                                <div class="tab-content-inner">
                                    <h6>Product Details</h6>
                                    <div class="details-grid">
                                        <div class="detail-item">
                                            <span class="detail-label">Product ID:</span>
                                            <span class="detail-value">#@Model.ID</span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label">Genre:</span>
                                            <span class="detail-value">@(Model.Genre?.Name ?? "Unknown")</span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label">Author/Creator:</span>
                                            <span class="detail-value">@Model.Author</span>
                                        </div>
                                        @if (Model.Published.HasValue)
                                        {
                                            <div class="detail-item">
                                                <span class="detail-label">Published:</span>
                                                <span class="detail-value">@Model.Published.Value.ToString("MMMM yyyy")</span>
                                            </div>
                                        }
                                        @if (Model.LastUpdated.HasValue)
                                        {
                                            <div class="detail-item">
                                                <span class="detail-label">Last Updated:</span>
                                                <span class="detail-value">@Model.LastUpdated.Value.ToString("MMM dd, yyyy")</span>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="specifications" role="tabpanel">
                                <div class="tab-content-inner">
                                    <h6>Technical Specifications</h6>
                                    <div class="specs-list">
                                        <div class="spec-item">
                                            <i class="fas fa-cube me-2 text-primary"></i>
                                            <span>High-quality content guaranteed</span>
                                        </div>
                                        <div class="spec-item">
                                            <i class="fas fa-language me-2 text-success"></i>
                                            <span>Available in English</span>
                                        </div>
                                        <div class="spec-item">
                                            <i class="fas fa-shipping-fast me-2 text-info"></i>
                                            <span>Fast delivery available</span>
                                        </div>
                                        <div class="spec-item">
                                            <i class="fas fa-undo me-2 text-warning"></i>
                                            <span>30-day return policy</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="reviews" role="tabpanel">
                                <div class="tab-content-inner">
                                    <h6>Customer Reviews</h6>
                                    <div class="reviews-placeholder">
                                        <div class="rating-overview">
                                            <div class="average-rating">
                                                <span class="rating-number">4.8</span>
                                                <div class="stars">
                                                    <i class="fas fa-star text-warning"></i>
                                                    <i class="fas fa-star text-warning"></i>
                                                    <i class="fas fa-star text-warning"></i>
                                                    <i class="fas fa-star text-warning"></i>
                                                    <i class="fas fa-star text-warning"></i>
                                                </div>
                                                <span class="review-count">Based on 127 reviews</span>
                                            </div>
                                        </div>
                                        <p class="text-muted">Customer reviews will be available soon.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Back to Catalog -->
            <div class="row mt-5">
                <div class="col-12 text-center">
                    <a href="@Url.Action("Catalog", "Home")" class="btn btn-outline-secondary btn-lg">
                        <i class="fas fa-arrow-left me-2"></i>Back to Catalog
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Quantity controls
        document.addEventListener('DOMContentLoaded', function() {
            const minusBtn = document.querySelector('.minus-btn');
            const plusBtn = document.querySelector('.plus-btn');
            const quantityInput = document.querySelector('.quantity-input');
            
            if (minusBtn && plusBtn && quantityInput) {
                minusBtn.addEventListener('click', function() {
                    let currentValue = parseInt(quantityInput.value);
                    if (currentValue > 1) {
                        quantityInput.value = currentValue - 1;
                    }
                });
                
                plusBtn.addEventListener('click', function() {
                    let currentValue = parseInt(quantityInput.value);
                    let maxValue = parseInt(quantityInput.max);
                    if (currentValue < maxValue) {
                        quantityInput.value = currentValue + 1;
                    }
                });
            }
        });

        // Add to cart with quantity
        function addToCartWithQuantity(productId) {
            const quantityInput = document.querySelector('.quantity-input');
            const quantity = quantityInput ? parseInt(quantityInput.value) : 1;
            const button = event.target.closest('button');
            const originalContent = button.innerHTML;
            
            // Show loading state
            button.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Adding...';
            button.disabled = true;

            fetch('/Customer/AddToCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: `productId=${productId}&quantity=${quantity}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast('success', data.message, 'fas fa-check-circle');
                    // Update cart count
                    if (typeof window.updateCartCount === 'function') {
                        window.updateCartCount();
                    }
                    
                    // Update button to show success temporarily
                    button.innerHTML = '<i class="fas fa-check me-2"></i>Added!';
                    button.classList.remove('btn-primary');
                    button.classList.add('btn-success');
                    
                    // Restore button after 2 seconds
                    setTimeout(() => {
                        button.innerHTML = originalContent;
                        button.classList.remove('btn-success');
                        button.classList.add('btn-primary');
                        button.disabled = false;
                    }, 2000);
                } else {
                    showToast('error', data.message, 'fas fa-exclamation-circle');
                    // Restore button
                    button.innerHTML = originalContent;
                    button.disabled = false;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('error', 'An error occurred. Please try again.', 'fas fa-exclamation-triangle');
                // Restore button
                button.innerHTML = originalContent;
                button.disabled = false;
            });
        }

        // Toast notification function
        function showToast(type, message, icon) {
            const toast = document.createElement('div');
            toast.className = `toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0`;
            toast.setAttribute('role', 'alert');
            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="${icon} me-2"></i>${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            `;
            
            document.body.appendChild(toast);
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();
            
            // Remove toast after it's hidden
            toast.addEventListener('hidden.bs.toast', () => {
                document.body.removeChild(toast);
            });
        }
    </script>
}

<style>
/* ProductDetails specific styles using site.css variables */
.breadcrumb {
    background: var(--card);
    border: 1px solid var(--border);
    border-radius: var(--border-radius);
    padding: 1rem;
}

.breadcrumb-item a {
    color: var(--muted-foreground);
    text-decoration: none;
    transition: var(--transition-fast);
}

.breadcrumb-item a:hover {
    color: var(--primary);
}

.breadcrumb-item.active {
    color: var(--primary);
}

.product-showcase {
    background: var(--card);
    border: 1px solid var(--border);
    border-radius: var(--border-radius);
    padding: 2rem;
    text-align: center;
    box-shadow: var(--shadow);
}

.icon-showcase {
    width: 120px;
    height: 120px;
    margin: 0 auto;
    background: var(--muted);
    border: 2px solid var(--border);
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 3rem;
    transition: var(--transition);
}

.icon-showcase:hover {
    transform: scale(1.05);
    border-color: var(--primary);
}

.quick-actions-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
}

.action-item {
    background: var(--muted);
    border: 1px solid var(--border);
    border-radius: var(--border-radius-sm);
    padding: 0.75rem;
    text-align: center;
    font-size: 0.875rem;
    transition: var(--transition);
}

.action-item:hover {
    background: var(--secondary);
    border-color: var(--primary);
}

.action-item i {
    display: block;
    margin-bottom: 0.5rem;
    font-size: 1.25rem;
}

.product-info {
    background: var(--card);
    border: 1px solid var(--border);
    border-radius: var(--border-radius);
    padding: 2rem;
    box-shadow: var(--shadow);
}

.genre-badge {
    display: inline-block;
    background: var(--muted);
    color: var(--primary);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 500;
    border: 1px solid var(--border);
}

.product-title {
    font-size: 2rem;
    font-weight: 700;
    color: var(--foreground);
    margin-bottom: 0.5rem;
    line-height: 1.2;
}

.product-author {
    color: var(--muted-foreground);
    font-size: 1.1rem;
    margin-bottom: 1.5rem;
}

.section-title {
    color: var(--foreground);
    font-weight: 600;
    margin-bottom: 1rem;
    border-bottom: 2px solid var(--border);
    padding-bottom: 0.5rem;
}

.pricing-section {
    background: var(--secondary);
    border: 1px solid var(--border);
    border-radius: var(--border-radius);
    padding: 1.5rem;
}

.price-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 1rem;
}

.current-price {
    font-size: 2rem;
    font-weight: 700;
    color: var(--primary);
}

.stock-available {
    color: var(--primary);
    font-weight: 500;
}

.stock-out {
    color: var(--destructive);
    font-weight: 500;
}

.quantity-controls {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-top: 0.5rem;
}

.quantity-btn {
    background: var(--muted);
    border: 1px solid var(--border);
    color: var(--foreground);
    width: 40px;
    height: 40px;
    border-radius: var(--border-radius-sm);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: var(--transition);
}

.quantity-btn:hover {
    background: var(--secondary);
    border-color: var(--primary);
}

.quantity-input {
    background: var(--input);
    border: 1px solid var(--border);
    color: var(--foreground);
    width: 80px;
    height: 40px;
    text-align: center;
    border-radius: var(--border-radius-sm);
    font-weight: 500;
}

.quantity-input:focus {
    border-color: var(--primary);
    outline: none;
    box-shadow: 0 0 0 0.2rem rgba(255, 255, 255, 0.25);
}

.button-group {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
}

.btn-add-cart {
    flex: 1;
    min-width: 200px;
}

.btn-wishlist, .btn-notify {
    flex: 1;
    min-width: 180px;
}

.info-tabs {
    background: var(--card);
    border: 1px solid var(--border);
    border-radius: var(--border-radius);
    overflow: hidden;
}

.nav-tabs {
    background: var(--secondary);
    border-bottom: 1px solid var(--border);
}

.nav-tabs .nav-link {
    color: var(--muted-foreground);
    border: none;
    background: transparent;
    padding: 1rem 1.5rem;
    transition: var(--transition);
}

.nav-tabs .nav-link:hover {
    color: var(--foreground);
    background: var(--muted);
}

.nav-tabs .nav-link.active {
    color: var(--primary);
    background: var(--card);
    border-bottom: 2px solid var(--primary);
}

.tab-content {
    background: var(--card);
}

.tab-content-inner {
    padding: 2rem;
}

.details-grid {
    display: grid;
    gap: 1rem;
}

.detail-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem;
    background: var(--muted);
    border: 1px solid var(--border);
    border-radius: var(--border-radius-sm);
}

.detail-label {
    color: var(--muted-foreground);
    font-weight: 500;
}

.detail-value {
    color: var(--foreground);
    font-weight: 600;
}

.specs-list {
    display: grid;
    gap: 1rem;
}

.spec-item {
    display: flex;
    align-items: center;
    padding: 1rem;
    background: var(--muted);
    border: 1px solid var(--border);
    border-radius: var(--border-radius-sm);
    color: var(--foreground);
}

.rating-overview {
    text-align: center;
    margin-bottom: 2rem;
}

.average-rating {
    background: var(--muted);
    border: 1px solid var(--border);
    border-radius: var(--border-radius);
    padding: 2rem;
}

.rating-number {
    font-size: 3rem;
    font-weight: 700;
    color: var(--primary);
    display: block;
}

.stars {
    margin: 0.5rem 0;
    font-size: 1.5rem;
}

.review-count {
    color: var(--muted-foreground);
    font-size: 0.875rem;
}

/* Use existing site.css text colors */
.text-info {
    color: #60a5fa !important;
}

.text-danger {
    color: #f87171 !important;
}

.text-success {
    color: #34d399 !important;
}

.text-warning {
    color: #fbbf24 !important;
}

/* Responsive design */
@@media (max-width: 768px) {
    .product-title {
        font-size: 1.5rem;
    }
    
    .price-container {
        flex-direction: column;
        align-items: start;
    }
    
    .button-group {
        flex-direction: column;
    }
    
    .btn-add-cart, .btn-wishlist, .btn-notify {
        min-width: auto;
        width: 100%;
    }
    
    .quick-actions-grid {
        grid-template-columns: 1fr;
    }
    
    .icon-showcase {
        width: 100px;
        height: 100px;
        font-size: 2.5rem;
    }
}
</style> 